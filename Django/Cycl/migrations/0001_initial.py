# Generated by Django 2.2.3 on 2019-08-04 09:16

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Lineup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrivalDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Rider arrives in team')),
                ('leavingDate', models.DateTimeField(blank=True, null=True, verbose_name='Rider leaves the team')),
            ],
        ),
        migrations.CreateModel(
            name='Manage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Manager arrives in team')),
                ('leavingDate', models.DateTimeField(blank=True, null=True, verbose_name='Manager leaves the team')),
            ],
        ),
        migrations.CreateModel(
            name='Parcours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Parcours',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=150)),
                ('playerName', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('isPremium', models.BooleanField(default=False)),
                ('lastLogin', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['lastName', 'firstName'],
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('session', models.IntegerField(null=True)),
                ('startDate', models.DateTimeField(verbose_name='When the race starts')),
                ('finishDate', models.DateTimeField(verbose_name='When the race ends')),
            ],
            options={
                'ordering': ['startDate'],
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bib', models.IntegerField()),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Race')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('time', models.TimeField(null=True)),
                ('stagePoints', models.IntegerField(null=True)),
                ('sprintPoints', models.IntegerField(null=True)),
                ('komPoints', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=100, null=True)),
                ('lastName', models.CharField(max_length=100, null=True)),
                ('birthDate', models.DateTimeField(null=True)),
                ('birthPlace', models.CharField(max_length=100, null=True)),
                ('nation', models.CharField(max_length=50, null=True)),
                ('continent', models.CharField(max_length=50, null=True)),
                ('weigth', models.FloatField(null=True)),
                ('height', models.FloatField(null=True)),
                ('uciid', models.CharField(max_length=11, null=True)),
                ('uciRank', models.IntegerField(null=True)),
                ('pcsRank', models.IntegerField(null=True)),
                ('race', models.ManyToManyField(related_name='_rider_race_+', through='Cycl.Register', to='Cycl.Race')),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('text', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('kilometers', models.FloatField(default=0)),
                ('start', models.CharField(max_length=100)),
                ('finish', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
                ('parcours', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Cycl.Parcours')),
                ('race', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Cycl.Race')),
            ],
        ),
        migrations.CreateModel(
            name='Teamcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('label', models.CharField(max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Teamcategories',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abreviation', models.CharField(default='ABC', max_length=3)),
                ('bike', models.CharField(max_length=30, null=True)),
                ('nation', models.CharField(max_length=50, null=True)),
                ('continent', models.CharField(max_length=50, null=True)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Cycl.Teamcategory')),
            ],
        ),
        migrations.CreateModel(
            name='StartList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atStart', models.BooleanField(default=1)),
                ('comment', models.TextField(null=True)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Rider')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Stage')),
            ],
            options={
                'unique_together': {('stage', 'rider')},
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=100, null=True)),
                ('lastName', models.CharField(max_length=100, null=True)),
                ('birthDate', models.DateTimeField(null=True)),
                ('nation', models.CharField(max_length=50, null=True)),
                ('continent', models.CharField(max_length=50, null=True)),
                ('uciid', models.CharField(max_length=11, null=True)),
                ('function', models.CharField(max_length=50)),
                ('team', models.ManyToManyField(related_name='_staff_team_+', through='Cycl.Manage', to='Cycl.Team')),
            ],
            options={
                'unique_together': {('lastName', 'firstName')},
            },
        ),
        migrations.AddField(
            model_name='rider',
            name='stage',
            field=models.ManyToManyField(related_name='_rider_stage_+', through='Cycl.Result', to='Cycl.Stage'),
        ),
        migrations.AddField(
            model_name='rider',
            name='startList',
            field=models.ManyToManyField(related_name='_rider_startList_+', through='Cycl.StartList', to='Cycl.Stage'),
        ),
        migrations.AddField(
            model_name='rider',
            name='team',
            field=models.ManyToManyField(related_name='_rider_team_+', through='Cycl.Lineup', to='Cycl.Team'),
        ),
        migrations.AddField(
            model_name='result',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Rider'),
        ),
        migrations.AddField(
            model_name='result',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Stage'),
        ),
        migrations.AddField(
            model_name='register',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Rider'),
        ),
        migrations.AddField(
            model_name='race',
            name='series',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Cycl.Serie'),
        ),
        migrations.AddField(
            model_name='manage',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Staff'),
        ),
        migrations.AddField(
            model_name='manage',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Team'),
        ),
        migrations.AddField(
            model_name='lineup',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Rider'),
        ),
        migrations.AddField(
            model_name='lineup',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Team'),
        ),
        migrations.CreateModel(
            name='Roster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Player')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Rider')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Stage')),
            ],
            options={
                'unique_together': {('player', 'stage', 'rider')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='rider',
            unique_together={('lastName', 'firstName', 'uciid')},
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together={('stage', 'rider')},
        ),
        migrations.AlterUniqueTogether(
            name='register',
            unique_together={('race', 'rider')},
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rosterTotalTime', models.TimeField(null=True)),
                ('rosterRank', models.IntegerField()),
                ('rosterPointsEarned', models.IntegerField()),
                ('additionnalPoints', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Player')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cycl.Stage')),
            ],
            options={
                'unique_together': {('player', 'stage')},
            },
        ),
    ]
